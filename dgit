#!/usr/bin/env bash

# dgit - 跨平台Git提交辅助工具
# 支持macOS、Linux、Windows (Git Bash/PowerShell)

# 版本信息
DGIT_VERSION="1.0.0"
DGIT_RELEASE_DATE="2025-01-27"

# 获取脚本所在目录（兼容zsh和bash，处理符号链接）
get_script_dir() {
    if [[ -n "$ZSH_VERSION" ]]; then
        # zsh环境
        local script_path
        script_path=$(readlink -f "$0" 2>/dev/null || echo "$0")
        echo "$(cd "$(dirname "$script_path")" && pwd)"
    else
        # bash环境
        local script_path
        script_path=$(readlink -f "${BASH_SOURCE[0]}" 2>/dev/null || echo "${BASH_SOURCE[0]}")
        echo "$(cd "$(dirname "$script_path")" && pwd)"
    fi
}

SCRIPT_DIR=$(get_script_dir)

# 检测shell类型
detect_shell() {
    if [[ -n "$ZSH_VERSION" ]]; then
        echo "zsh"
    elif [[ -n "$BASH_VERSION" ]]; then
        echo "bash"
    elif [[ -n "$POWERSHELL_VERSION" ]] || [[ "$(basename "$SHELL")" == "pwsh" ]]; then
        echo "powershell"
    else
        # 尝试检测父进程
        local parent_shell
        parent_shell=$(ps -p $$ -ocomm= 2>/dev/null || echo "")
        case "$parent_shell" in
            *zsh) echo "zsh" ;;
            *bash) echo "bash" ;;
            *pwsh|*powershell) echo "powershell" ;;
            *) echo "bash" ;;
        esac
    fi
}

# 显示版本信息
show_version() {
    echo "dgit version $DGIT_VERSION"
    echo "Release date: $DGIT_RELEASE_DATE"
    echo "技术支持：敖龙宇 / longyu.ao@dmall.com"
}

# 显示帮助信息
show_help() {
    echo ""
    echo "多点Git仓库管理规范：https://duodian.feishu.cn/wiki/X9wRwzeM7i39iQk7TxZccBdFnvb"
    echo "更多问题飞书联系：敖龙宇 / longyu.ao@dmall.com"
    echo ""
    echo "支持的平台:"
    echo "  - macOS (zsh/bash)"
    echo "  - Linux (bash)"
    echo "  - Windows (PowerShell/Git Bash)"
    echo ""
    echo "命令:"
    echo "  dgit commit    # 生成Git提交信息"
    echo "  dgit alias     # 管理需求单号别名"
    echo "  dgit version   # 版本管理（更新/回退到指定版本）"
    echo "  dgit help      # 显示帮助信息"
    echo "  dgit --version # 显示版本信息"
    echo ""
}

# 检查命令参数
# 检查版本参数
if [[ "$1" == "--version" ]] || [[ "$1" == "-v" ]]; then
    show_version
    exit 0
fi

if [[ "$1" == "help" ]]; then
    show_help
    exit 1
fi

if [[ "$1" == "alias" ]]; then
    # 别名管理命令
    shell_type=$(detect_shell)
    
    case "$shell_type" in
        "powershell")
            # PowerShell环境
            if [[ -f "$SCRIPT_DIR/scripts/alias_manager.ps1" ]]; then
                exec pwsh -File "$SCRIPT_DIR/scripts/alias_manager.ps1" "${@:2}"
            else
                echo "错误: 找不到 scripts/alias_manager.ps1 脚本"
                exit 1
            fi
            ;;
        *)
            # Bash/Zsh环境
            if [[ -f "$SCRIPT_DIR/scripts/alias_manager.sh" ]]; then
                exec "$SCRIPT_DIR/scripts/alias_manager.sh" "${@:2}"
            else
                echo "错误: 找不到 scripts/alias_manager.sh 脚本"
                exit 1
            fi
            ;;
    esac
fi

if [[ "$1" == "version" ]]; then
    # 版本管理命令
    shell_type=$(detect_shell)
    
    case "$shell_type" in
        "powershell")
            # PowerShell环境
            if [[ -f "$SCRIPT_DIR/scripts/version_manager.ps1" ]]; then
                exec pwsh -File "$SCRIPT_DIR/scripts/version_manager.ps1" "${@:2}"
            else
                echo "错误: 找不到 scripts/version_manager.ps1 脚本"
                exit 1
            fi
            ;;
        *)
            # Bash/Zsh环境
            if [[ -f "$SCRIPT_DIR/scripts/version_manager.sh" ]]; then
                exec "$SCRIPT_DIR/scripts/version_manager.sh" "${@:2}"
            else
                echo "错误: 找不到 scripts/version_manager.sh 脚本"
                exit 1
            fi
            ;;
    esac
fi

if [[ "$1" != "commit" ]]; then
    echo "用法: dgit <命令> [参数...]"
    echo ""
    echo "命令:"
    echo "  commit    # 生成Git提交信息"
    echo "  alias     # 管理需求单号别名"
    echo "  version   # 版本管理（更新/回退到指定版本）"
    echo "  help      # 显示帮助信息"
    echo "  --version # 显示版本信息"
    echo ""
    exit 1
fi

# 检测shell类型并调用相应脚本
shell_type=$(detect_shell)

case "$shell_type" in
    "powershell")
        # PowerShell环境
        if [[ -f "$SCRIPT_DIR/scripts/dgit.ps1" ]]; then
            exec pwsh -File "$SCRIPT_DIR/scripts/dgit.ps1" "$@"
        else
            echo "错误: 找不到 scripts/dgit.ps1 脚本"
            exit 1
        fi
        ;;
    *)
        # Bash/Zsh环境
        if [[ -f "$SCRIPT_DIR/scripts/dgit.sh" ]]; then
            exec "$SCRIPT_DIR/scripts/dgit.sh" "$@"
        else
            echo "错误: 找不到 scripts/dgit.sh 脚本"
            exit 1
        fi
        ;;
esac